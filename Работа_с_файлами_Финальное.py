import json

### Пример списка с заметками
notes = [
    {'username': 'Алексей', 'title': 'Список покупок', 'content': 'Купить продукты на неделю', 'status': 'новая',
     'created_date': '27-11-2024', 'issue_date': '30-11-2024'},
    {'username': 'Мария', 'title': 'Учеба', 'content': 'Подготовиться к экзамену', 'status': 'в процессе',
     'created_date': '25-11-2024', 'issue_date': '01-12-2024'},
    {'username': 'Иван', 'title': 'План работы', 'content': 'Завершить проект', 'status': 'выполнено',
     'created_date': '20-11-2024', 'issue_date': '26-11-2024'}
]

### Пример списка для добавления в файл
new_notes = [
    {"username": "Мария", "title": "План работы", "content": "Подготовить отчёт", "status": "в процессе",
     "created_date": "27-11-2024", "issue_date": "28-11-2024"
     }
]


### Функция перезаписывает данные в файле на заметки из списка, если файл не существует он автоматически создается
def save_notes_to_file(notes, filename):
    ### Начинаем вести запись в наш файл, если данного файла не существует, то он создастся
    file = open(filename, 'w', encoding='utf-8')

    ### Записываем в наш файл все заметки из списка в красивом формате с помощью вложенного цикла
    ### В конечном результате в нашем файле будут только заметки из текущего списка
    ### Если в файле были какие-то данные, они удалятся и запишутся заметки
    for i in range(len(notes)):
        for _ in notes[i]:
            file.write(f"Имя пользователя: {notes[i]['username']}\n")
            file.write(f"Заголовок: {notes[i]['title']}\n")
            file.write(f"Описание: {notes[i]['content']}\n")
            file.write(f"Статус: {notes[i]['status']}\n")
            file.write(f"Дата создания: {notes[i]['created_date']}\n")
            file.write(f"Дедлайн: {notes[i]['issue_date']}\n\n")
            break

    ### Закрываем наш файл
    file.close()


### Функция для добавления заметок из файла в наш основной список в виде словаря
def load_notes_from_file(filename):
    ### Данная конструкция нам необходима, чтобы выводить пользователю, если данного файла не существует, то его необходимо создать
    ### После заканчивает работу программы
    try:
        open(filename, encoding='utf-8')
    except FileNotFoundError:
        print(f"\nФайла {filename} не существует. Создан новый файл.")
        open(filename, 'x', encoding='utf-8')

    ### Открываем файл для будущей с ним работой
    file = open(filename, encoding='utf-8')

    notes = []  ### Основной список со всеми заметками
    note = []  ### Временный список с одной заметкой

    ### Создаем переменную text, которая будет содержать все данные из файла в виде списка и избавляемся от '\n' в списке
    text = file.read().split("\n")

    ### Удаляем все пустые элементы в списке
    count = text.count('')
    for i in range(count):
        text.remove('')

    ### Проходимся по всей переменной text, которая содержит весь текст из файла в виде списка
    ### Добавляем в список note ['ключ', 'значение'], проверяем есть ли нужный нам ключ в списке note
    ### Приравниваем нужную переменную со значением из списка note
    ### Каждый раз очищаем список note для следующего 'ключа' и 'значения'
    ### После того как переменной issue_date приравняли значение, создаем словарь и добавляем его в наш основной список
    for i in text:
        note.append(i.split(": "))
        if 'Имя пользователя' in note[0][0]:
            username = note[0][1]  ### Данная переменная будет хранить в себе имя пользователя из списка
            note = []
        elif 'Заголовок' in note[0][0]:
            title = note[0][1]  ### Данная переменная будет хранить в себе заголовок заметки из списка
            note = []
        elif 'Описание' in note[0][0]:
            content = note[0][1]  ### Данная переменная будет хранить в себе описание заметки из списка
            note = []
        elif 'Статус' in note[0][0]:
            status = note[0][1]  ### Данная переменная будет хранить в себе статус заметки из списка
            note = []
        elif 'Дата создания' in note[0][0]:
            created_date = note[0][1]  ### Данная переменная будет хранить в себе дату создания заметки из списка
            note = []
        elif 'Дедлайн' in note[0][0]:
            issue_date = note[0][1]  ### Данная переменная будет хранить в себе дедлайн заметки из списка
            note = []
            dict_note = {'username': username, 'title': title, 'content': content,
                         'status': status, 'created_date': created_date,
                         'issue_date': issue_date}
            notes.append(dict_note)

    ### Закрываем файл
    file.close()

    ### Если файл пустой, то выполняется данное условие
    if len(notes) == 0:
        return print(f"\nДанные в файле '{filename}' отсутствуют. Внесите правильные данные перед началом работы")

    ### Возвращаем вывод списка с заметками
    return notes


### Функция для добавления заметок в файл
def append_notes_to_file(notes, filename):
    ### Начинаем вести запись в наш файл, если данного файла не существует, то он создастся
    file = open(filename, 'a', encoding='utf-8')

    ### Записываем в наш файл все заметки из списка в красивом формате с помощью вложенного цикла
    ### В конечном результате в наш файл добавятся заметки из текущего списка
    ### Если в файле были какие-то данные к ним добавятся наши заметки
    for i in range(len(notes)):
        for _ in notes[i]:
            file.write(f"Имя пользователя: {notes[i]['username']}\n")
            file.write(f"Заголовок: {notes[i]['title']}\n")
            file.write(f"Описание: {notes[i]['content']}\n")
            file.write(f"Статус: {notes[i]['status']}\n")
            file.write(f"Дата создания: {notes[i]['created_date']}\n")
            file.write(f"Дедлайн: {notes[i]['issue_date']}\n\n")
            break

    ### Закрываем наш файл
    file.close()


def save_notes_json(notes, filename):
    ### Мы открываем файл с переданным названием через параметр функции и выводим в него список заметок в красивом формате
    ### Если в файле были какие-то данные, они перезапишутся на заметки из списка
    ### Также, если файл с таким названием не существует, программа создаст его и внесёт данные
    with open(filename, 'w', encoding='utf-8') as file:
        json.dump(notes, file, indent=4, ensure_ascii=False)


### Вызываем функцию сохранения заметок в файле
print("Функция save_notes_to_file сработала успешно. Заметки сохранились в файл\n")
save_notes_to_file(notes, "notes.txt")

### Вызываем функцию загрузки заметок в наш список
### И печатаем её на экран, чтобы удостовериться, что она сработала нормально
print("Функция load_notes_from_file сработала успешно. Список с заметками из файла:\n",
      load_notes_from_file("notes.txt"))

### Вызываем функцию для добавления заметок в файл
print("\nФункция append_notes_to_file сработала успешно. Заметки добавились в файл\n")
append_notes_to_file(new_notes, "notes.txt")

### Вызываем функцию для сохранения заметок в файле json
print("Функция save_notes_json сработала успешно. Заметки сохранились в файл")
save_notes_json(notes, "notes.json")

### Конструкция для обработки ошибок
try:
    notes = load_notes_from_file("corrupted_file.txt")
except Exception as e:
    print(f"Ошибка: {e}")
